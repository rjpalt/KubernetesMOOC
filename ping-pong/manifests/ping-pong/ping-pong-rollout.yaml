apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  namespace: exercises
  name: ping-pong-app
spec:
  replicas: 1
  strategy:
    canary:
      steps:
        - setWeight: 25
        - pause:
            duration: 60s  # Allow metrics to stabilize
        - analysis:
            templates:
              - templateName: ping-pong-cpu-analysis-sidecar
        - setWeight: 50
        - pause:
            duration: 60s
        - analysis:
            templates:
              - templateName: ping-pong-cpu-analysis-sidecar
        - setWeight: 75
        - pause:
            duration: 60s
        - analysis:
            templates:
              - templateName: ping-pong-cpu-analysis-sidecar
  selector:
    matchLabels:
      app: ping-pong
  template:
    metadata:
      labels:
        app: ping-pong
        azure.workload.identity/use: "true"
      annotations:
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: argo-rollouts-prometheus
      containers:
        - name: ping-pong
          image: kubemooc.azurecr.io/ping-pong-app:4.4.3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: PING_PONG_APP_PORT
              value: "3000"
            - name: PING_PONG_LOG_LEVEL
              value: "INFO"
            - name: PING_PONG_DB_HOST
              value: "postgres-svc"
            - name: PING_PONG_DB_PORT
              value: "5432"
            - name: PING_PONG_DB_NAME
              value: "pingpong-db"
            - name: PING_PONG_DB_USER
              valueFrom:
                secretKeyRef:
                  name: ping-pong-app-secret
                  key: DB_USER
            - name: PING_PONG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ping-pong-app-secret
                  key: DB_PASSWORD
        - name: prometheus-auth-sidecar
          image: kubemooc.azurecr.io/auth-proxy-sidecar:latest
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8080
              name: auth-proxy
          env:
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-workload-identity-secret
                  key: client-id
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-workload-identity-secret
                  key: tenant-id
            - name: AZURE_FEDERATED_TOKEN_FILE
              value: "/var/run/secrets/azure/tokens/azure-identity-token"
            - name: AZURE_AUTHORITY_HOST
              value: "https://login.microsoftonline.com/"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
