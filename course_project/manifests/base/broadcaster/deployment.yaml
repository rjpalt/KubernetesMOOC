apiVersion: apps/v1
kind: Deployment
metadata:
  name: broadcaster
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broadcaster
  template:
    metadata:
      labels:
        app: broadcaster
    spec:
      securityContext:
        runAsUser: 1001
        runAsNonRoot: true
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: broadcaster
          # Using latest tag for manual build/push workflow (similar to auth-proxy-sidecar)
          # TODO: Integrate into CI/CD pipeline for automatic image updates
          image: kubemooc.azurecr.io/broadcaster:latest
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          env:
            - name: PORT
              value: "8002"
            - name: LOG_LEVEL
              value: "INFO"
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: broadcaster-secret
                  key: WEBHOOK_URL
            - name: NATS_URL
              value: "nats://nats:4222"
            - name: ENVIRONMENT
              value: "development"  # Overridden by overlays
          ports:
            - containerPort: 8002
              name: http
            - containerPort: 7777
              name: metrics
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8002
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8002
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /health
              port: 8002
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 30
            successThreshold: 1
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-tmp
              mountPath: /var/tmp
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-tmp
          emptyDir: {}
