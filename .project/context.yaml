# Machine Project Context (gitignored)
version: 1
azure:
  subscriptionEnvVar: AZURE_SUBSCRIPTION_ID
  subscriptionId: ede18d8a-a758-4a40-b15e-6eded5264b93
  resourceGroup: kubernetes-learning
  aksCluster: kube-mooc
  acr:
    loginServer: kubemooc.azurecr.io
    name: kubemooc
  storage:
    accountName: kubemoocbackups
    allowSharedKeyAccess: false
    networkRuleSetDefaultAction: Allow
    backupContainer: database-backups
    containers:
      production: database-backups
      feature: feature-backups
      local: local-backups
  backup:
    identities:
      production:
        name: backup-production-identity
        clientId: 50f96678-064c-463a-a3e3-2297a3b557f1
        principalId: 7b093f7e-28fa-40c1-b134-2540e64a70f1
        federatedCredential: backup-production-k8s
        serviceAccount: system:serviceaccount:default:backup-serviceaccount
        permissions:
          - container: database-backups
            role: Storage Blob Data Contributor
      development:
        name: backup-development-identity
        clientId: 640dd28d-3d3e-416d-aaf6-85c52a1f0db5
        principalId: 5da97818-5f7f-436d-8c97-64aecf0bbfa1
        federatedCredential: backup-development-k8s
        serviceAccount: system:serviceaccount:backup-shared:backup-serviceaccount
        permissions:
          - container: feature-backups
            role: Storage Blob Data Contributor
          - container: local-backups
            role: Storage Blob Data Contributor
kubernetes:
  featureNamespacePattern: feature-<branch>
  stableNamespaces:
    - default
    - kube-system
images:
  tagPattern: "{branch}-{sha}"
  repositories:
    - todo-app-be
    - todo-app-fe
workflows:
  ciName: "CI Pipeline - Microservices"
  featureDeployWorkflow: deploy-feature-branches.yml
  productionDeployWorkflow: deploy-production.yml
rules:
  allowedActions:
    azure:
      - aks_cluster_list
      - acr_repository_list
      - acr_repository_show_tags
    github:
      - list_pull_requests
      - get_pull_request
      - get_workflow_runs
notes:
  - Non-destructive operations only.
  - Update subscriptionId if environment changes.

dx:
  docsIndex:
    - docs/overview/onboarding.md
    - docs/overview/repo-map.md
    - docs/development/local-dev.md
    - docs/development/script-catalog.md
    - docs/testing/index.md
  serviceDocs:
    - course_project/TESTING_OVERVIEW.md
    - course_project/todo-backend/tests/TEST_PLAN.md
    - course_project/todo-app/TEST_PLAN.md
  docPlacement:
    root: indices-only
    courseProjectDocs: service-specific
  devModes:
    localDev: make local-dev  # uv apps + DB via backend compose
    compose: make compose-up   # all services in compose (attached)
  db:
    up: make db-up
    down: make db-down
  tests:
    all: make test
    backend: make test-be
    frontend: make test-fe
  buildQuality:
    build: make build-images TAG=<tag>  # updates course_project/docker-compose.yaml
    quality: make quality [CHECK=1]
  conventions:
    - no file moves without confirmation
    - root docs are short; link to canonical sources
    - Kubernetes: guidance only; do not implement
